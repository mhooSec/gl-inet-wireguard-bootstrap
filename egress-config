#!/bin/ash

# This script will:
# - Use a custom routing table using 192.168.1.1 as default gateway - modify this if your upstream router does not have this private IP address.
# - Allow LAN access, so this peer can be accessed remotely from an ingress server for management purposes - this could be insecure if we do not trust the VPN environment.
# - Establish a root password (in plain text) - consider changing the password.
# - Push only some traffic through the VPN tunnel (split-tunnelling).

uci delete dhcp.@dnsmasq[0].address
uci delete firewall.@redirect[0] # Deleting firewall rules which capture traffic when device is not initialised.
uci delete firewall.@redirect[0] # This is repeated on purpose, as @redirect[1] now becomes @redirect[0] after running the previous command.
uci delete firewall.@redirect[0] # This is repeated on purpose, as @redirect[2] became @redirect[1] after running the first delete command, and then it became @redirect[0] after running the previous command.
uci set firewall.@zone[1].masq='1'
uci set oui-httpd.main.security_rule='0'
uci set glconfig.general.autotimezone='1'
uci set oui-httpd.main.lang='en' # Setting language to English.
uci set oui-httpd.main.inited='1' # Setting device to initialised.
uci set vpnpolicy.route_policy.proxy_mode='2' # Changing proxy mode from default (Global Proxy) to custom routing table.
uci commit

/etc/init.d/dnsmasq restart

echo "root:s3curep4ssw0rd"|chpasswd # Changing root password. Make sure you change the password after doing the reboot with passwd command, so it is not plain text and not recorded in history.

# This will overwrite /etc/config/wireguard file, which comes with some entries related to commercial VPN providers.
cat << EOF > /etc/config/wireguard
config proxy 'global'
        option global_proxy '1'

config groups 'group_9543'
        option group_type '2'
        option auth_type '0'
        option group_name 'group_name'

config peers 'peer_3219'
        option group_id '9543'
        option name 'tunnel_name'
        option persistent_keepalive '25'
        option listen_port '59300'
        option dns '8.8.8.8'
        option ipv6_enable '0'
        option presharedkey_enable '1'
        option masq '1'
        option local_access '1'
        option default_metric '0'
        option address_v4 '10.10.10.99/32'
        option private_key 'interface_private_key='
        option public_key 'peer_public_key='
        option end_point 'our.desired.endpoint:51820'
        option allowed_ips '10.10.10.0/24'
        option preshared_key 'psk='

config route_rules 'rule_2528'
        option peer_id '3219'
        option route_flag '4'
        option mask '24'
        option metric '0'
        option scope 'link'
        option dest '10.10.10.0'
        option gateway '10.10.10.99'

config route_rules 'rule_8284'
        option peer_id '3219'
        option route_flag '4'
        option dest '0.0.0.0'
        option mask '0'
        option gateway '192.168.1.1'
        option metric '0'
        option scope 'link'
EOF

# This will add the relevant WireGuard interface in the network list, and we enable it so it auto-connects upon reboot.
cat << EOF >> /etc/config/network

config interface 'wgclient'
        option proto 'wgclient'
        option config 'peer_3219'
        option disabled '0'
EOF

sleep 5

reboot
